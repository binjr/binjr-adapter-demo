trigger:
  branches:
    include:
      - master
      - '*-dev'
      - azure-pipelines
  tags:
    include:
      - v*

name: $(Date:yyyyMMdd)$(Rev:.r)

variables:
  system.debug: false
  isTag: 'false'
  isSnapshot: 'false'

jobs:
  - job: build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
      - checkout: self
        lfs: true

      - script: |
          curl 'https://cdn.azul.com/zulu/bin/zulu17.30.15-ca-jdk17.0.1-linux_x64.tar.gz' --output $(Agent.TempDirectory)/jdk-latest-linux_x64.tar.gz

      - task: JavaToolInstaller@0
        inputs:
          versionSpec: "17"
          jdkArchitectureOption: x64
          jdkSourceOption: LocalDirectory
          jdkFile: $(Agent.TempDirectory)/jdk-latest-linux_x64.tar.gz
          jdkDestinationDirectory: $(Agent.ToolsDirectory)/binaries/openjdk
          cleanDestinationDirectory: true

      - task: DownloadSecureFile@1
        name: gpgKeyring
        displayName: 'Download GPG Keyring'
        inputs:
          secureFile: 'keyring.gpg'

      - bash: |
          echo '##vso[task.setvariable variable=isTag;]true'
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))

      - bash: |
          echo '##vso[task.setvariable variable=isSnapshot;]true'
        condition: and(succeeded(), endsWith(variables['Build.SourceBranch'], '-SNAPSHOT'))

      - task: Gradle@2
        env:
          GPG_KEY_NAME: $(GPG_KEY_NAME)
          GPG_PASSPHRASE: $(GPG_PASSPHRASE)
          GPG_KEYRING_PATH: $(gpgKeyring.secureFilePath)
          IS_TAG: $(isTag)
          REPO_TAG_NAME: $(Build.SourceBranchName)
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.17'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          testResultsFiles: '**/TEST-*.xml'
          tasks: 'signPackageDistribution'

      - task: GithubRelease@0
        condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
        inputs:
          gitHubConnection: binjr-bot
          repositoryName: binjr/binjr-adapter-demo
          action: edit
          tag: $(Build.SourceBranchName)
          assets: |
            $(System.DefaultWorkingDirectory)/build/*.zip
            $(System.DefaultWorkingDirectory)/build/*.asc
          assetUploadMode: 'replace'
          releaseNotesSource: 'file'
          releaseNotesFile: $(System.DefaultWorkingDirectory)/UNRELEASED.md
          addChangeLog: false
          isPreRelease: $(isSnapshot)